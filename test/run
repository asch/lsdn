#!/bin/bash

set -eu

cd $(dirname $0)
source lib/common.sh

run_stages() {
	$tracecmd

	lsctl="../lsctl/lsctl"

	for s in $stages; do
		$s
	done
}

stages=all
function add_stage() {
	local stage="$1"
	if [ "$stages" == "all" ]; then
		stages=""
	fi
	stages="$stages $stage"
}

function  usage() {
	echo "Usage:" >&2
	echo "	$0 -xpctz [parts]" >&2
	echo "  -x  trace all commands" >&2
	echo "  -p  run the prepare stage" >&2
	echo "  -c  run the connect stage" >&2
	echo "  -t  run the test stage" >&2
	echo "  -z  run the cleanup stage" >&2
	exit 1
}

tracecmd=true

while getopts ":xpctzvh" opt; do
	case $opt in
		x)
			tracecmd="set -x"
		;;
		p)
			add_stage prepare
		;;
		c)
			add_stage connect
		;;
		t)
			add_stage test
		;;
		z)
			add_stage cleanup
		;;
		h)
			usage
		;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			usage
		;;
	esac
done
shift $((OPTIND - 1))

if [ "$stages" == all ]; then
	stages="prepare connect test cleanup"
fi

cleanup_handler=true
if echo "$stages" | grep -q cleanup; then
	cleanup_handler=cleanup
fi

for p in "$@"; do
	source "parts/$p.sh"
done

run_stages
